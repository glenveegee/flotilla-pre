#!/bin/bash

: <<'DISCLAIMER'

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

This script is licensed under the terms of the MIT license.
Unless otherwise noted, code reproduced herein
was written for this script.

- The Pimoroni Crew -

DISCLAIMER

docktool="./firmware-version"
firmwarev="1.14"

success() {
    echo "$(tput setaf 2)$1$(tput sgr0)"
}

warning() {
    echo "$(tput setaf 1)$1$(tput sgr0)"
}

newline() {
    echo ""
}

confirm() {
    if [ "$FORCE" == '-y' ]; then
        true
    else
        read -r -p "$1 [y/N] " response < /dev/tty
        if [[ $response =~ ^(yes|y|Y)$ ]]; then
            true
        else
            false
        fi
    fi
}

newline
echo "Flotilla dock firmware check"

# check if dock is plugged in

if command -v lsusb > /dev/null; then

    RESULT=$(lsusb -d 16d0:08c3)

    if [ -z "$RESULT" ]; then
        echo "Plug in your Flotilla Dock now."
    fi

    while ! lsusb -d 16d0:08c3; do
        pause=$(($pause++))
        if [ $pause = 10 ]; then
            break
        fi
        sleep 1
    done

elif command -v ioreg > /dev/null; then

    pause=0
    HEXDOCK=$(ioreg | grep "Flotilla Dock")

    if [ -z "$HEXDOCK" ]; then
        echo "Plug in your Flotilla Dock now."
    fi

    while [ -z "$HEXDOCK" ]; do
        HEXDOCK=$(ioreg | grep "Flotilla Dock")
        pause=$(($pause+1))
        if [ $pause = 10 ]; then
            break
        fi
        sleep 1
    done
fi

# check if dock firmware is current

echo "Reading current firmware version..."
sleep 1

if [ -f "$docktool.py" ]; then
    if python -c "import flotilla" 2>&1 >/dev/null | grep "No module named flotilla"; then
        pythonapi=false
        echo "The flotilla Python API is not installed"
        echo "Dock current version unknown"
    else
        pythonapi=true
        firmwared=$($docktool | grep "Version" | rev | cut -c 1-4 | rev )
        echo "Version: $firmwared"
    fi
elif [ -f "$docktool" ]; then
    firmwared=$($docktool | grep "Version" | rev | cut -c 1-4 | rev )
    echo "Version: $firmwared"
else
    echo "no version checker tool found"
    exit 1
fi

if  $pythonapi; then
    if [[ "$firmwared" < "$firmwarev" ]]; then
        echo "Your dock firmware needs to be updated!"
        exit 1
    else
        echo "Your dock is flashed with the latest firmware"
    fi
fi

exit 0
